;CONSTANTS

	;FAT12_ENTRY
		FAT12_ENTRY_SIZE		equ 32
		FAT12_NAME_SIZE			equ 11		;8.3 rule
			FAT12_ENTRY_FILEATTRIBUTES	equ 11	;FAT12_ENTRY FILE ATTRIBUTES
			FAT12_ENTRY_FIRSTCLUSTER	equ 26	;FAT12_ENTRY FIRST CLUSTER
			FAT12_ENTRY_FILESIZE		equ 28	;FAT12_ENTRY FILESIZE (in bytes)
			
		;FAT12_ENTRY Attribute Masks
			FAT12_ATTRIBUTE_READONLY	equ 00000001b
			FAT12_ATTRIBUTE_HIDDEN		equ 00000010b
			FAT12_ATTRIBUTE_SYSTEM		equ 00000100b
			FAT12_ATTRIBUTE_VOLLABEL	equ 00001000b
			FAT12_ATTRIBUTE_SUBDIR		equ 00010000b
			FAT12_ATTRIBUTE_ARCHIVE		equ 00100000b
			FAT12_ATTRIBUTE_RESERVED1	equ 01000000b
			FAT12_ATTRIBUTE_RESERVED2	equ 10000000b
		
		;FAT12 Misc Constants
		LOGICAL_CLUSTER_OFFSET	equ 30	;FAT12 LBA offset


	;GDT
		GDT_FLAGS_NIBBLE		equ 11110000b	;Byte 6 of GDT, Flags portion
		GDT_LIMIT_NIBBLE		equ 00001111b	;Byte 6 of GDT, Limit 19:16 portion

		;GDT Flags bitmasks
			GDT_FLAGS_GRANULARITY		equ 10000000b	;Granularity Bit
				GDT_FLAGS_GRANULARITY_PAGE	equ 10000000b	;Granularity 4KiB blocks
				GDT_FLAGS_GRANULARITY_BYTE	equ 00000000b	;Granularity 1MiB blocks
			GDT_FLAGS_SIZE				equ 01000000b	;Size bit
				GDT_FLAGS_SIZE_32			equ 01000000b	;Size 32 bits
				GDT_FLAGS_SIZE_16			equ 00000000b	;Size 16 bits
		
		;GDT Access Bitmasks
			GDT_ACCESS_PRESENT			equ 10000000b	;Present Bit, must be 1 to be valid
			GDT_ACCESS_PRIVL			equ 01100000b	;Privilege Bits(2), Determines Ring Level
				GDT_ACCESS_PRIVL_0			equ 00000000b
				GDT_ACCESS_PRIVL_1			equ 00100000b
				GDT_ACCESS_PRIVL_2			equ 01000000b
				GDT_ACCESS_PRIVL_3			equ 01100000b
			GDT_ACCESS_TYPE				equ 00010000b	;Type bit, 1 if Code/Data Segment, 0 if System Segment
				GDT_ACCESS_TYPE_CODE		equ 00010000b	;Code Segment Type
				GDT_ACCESS_TYPE_DATA		equ 00010000b	;Data Segment Type
				GDT_ACCESS_TYPE_SYSTEM		equ 00000000b	;System Segment Type
			GDT_ACCESS_EXECUTABLE		equ 00001000b	;Executable Bit, 1 for code segment and 0 for data
				GDT_ACCESS_EXECUTABLE_CODE	equ 00001000b	;Code Segment
				GDT_ACCESS_EXECUTABLE_DATA	equ 00000000b	;Data Segment
			GDT_ACCESS_DIRECTION		equ 00000100b	;Direction Bit (Data Segment)
				GDT_ACCESS_DIRECTION_DOWN	equ 00000100b	;Data Segment Grows Down
				GDT_ACCESS_DIRECTION_UP		equ 00000000b	;Data Segment Grows Up
			GDT_ACCESS_CONFORMING		equ 00000100b	;Conforming Bit (Code Segment)
				GDT_ACCESS_IS_CONFORMING	equ 00000100b	;Is conforming segment
				GDT_ACCESS_NON_CONFORMING	equ 00000000b	;Non conforming segment
			GDT_ACCESS_READWRITE		equ 00000010b	;Read bit/Write bit (Code/Data)
				GDT_ACCESS_READABLE			equ 00000010b	;Readable Code Segment
				GDT_ACCESS_WRITABLE			equ 00000010b	;Writable Data Segment
				GDT_ACCESS_NON_READABLE		equ 00000000b	;Non Readable Code Segment
				GDT_ACCESS_NON_WRITABLE		equ 00000000b	;Non Writable Data Segment
			GDT_ACCESS_ACCESSED			equ 00000001b	;Accessed bit, CPU handles this

	;GDT bitmask combinations
		GDT_CODE_SEGMENT	equ GDT_ACCESS_PRESENT | GDT_ACCESS_TYPE_CODE | GDT_ACCESS_EXECUTABLE_CODE
		GDT_DATA_SEGMENT	equ GDT_ACCESS_PRESENT | GDT_ACCESS_TYPE_DATA | GDT_ACCESS_EXECUTABLE_DATA
		GDT_STACK_SEGMENT	equ GDT_ACCESS_PRESENT | GDT_DATA_SEGMENT | GDT_ACCESS_DIRECTION_DOWN | GDT_ACCESS_WRITABLE
		

;Selector constants
	NULL_SEG_SELECTOR	equ 0x00
	CODE_SEG_SELECTOR	equ 0x08
	DATA_SEG_SELECTOR	equ 0x10
	STACK_SEG_SELECTOR	equ 0x18

	STACK_SEG_OFFSET	equ 0x00ffffff
